{"version":3,"sources":["useFetch.js","context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["API_ENDPOINT","process","REACT_APP_MOVIE_API_KEY","useFetch","urlParams","useState","isLoading","setIsLoading","show","msg","error","setError","data","setData","fetchMovies","url","a","fetch","response","json","Response","Search","Error","console","log","useEffect","AppContext","React","createContext","AppProvider","children","query","setQuery","movies","Provider","value","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","type","onChange","target","Movies","map","movie","id","imdbID","poster","Poster","title","Title","year","Year","to","key","src","alt","Home","SingleMovie","useParams","plot","Plot","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7dd06ac.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`\r\n\r\nconst useFetch = (urlParams) => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [error, setError] = useState({ show: false, msg: '' })\r\n  const [data, setData] = useState(null)\r\n  const fetchMovies = async (url) => {\r\n    setIsLoading(true)\r\n    try {\r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n\r\n      if (data.Response === 'True') {\r\n        setData(data.Search || data)\r\n\r\n        setError({ show: false, msg: '' })\r\n      } else {\r\n        setError({ show: true, msg: data.Error })\r\n      }\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMovies(`${API_ENDPOINT}${urlParams}`)\r\n  }, [urlParams])\r\n  return { isLoading, error, data }\r\n}\r\n\r\nexport default useFetch\r\n","import React, { useState, useContext, useEffect } from 'react'\r\n// make sure to use https\r\nimport useFetch from './useFetch'\r\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [query, setQuery] = useState('batman')\r\n  const { isLoading, error, data: movies } = useFetch(`&s=${query}`)\r\n\r\n  return (\r\n    <AppContext.Provider value={{ isLoading, error, movies, query, setQuery }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\nconst SearchForm = () => {\r\n  const { query, setQuery, error } = useGlobalContext()\r\n  return (\r\n    <form className='search-form' onSubmit={(e) => e.preventDefault()}>\r\n      <h2>search movies</h2>\r\n      <input\r\n        type='text '\r\n        className='form-input'\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      {error.show && <div className='error'>{error.msg}</div>}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\nimport { useGlobalContext } from './context'\r\nimport { Link } from 'react-router-dom'\r\nconst url =\r\n  'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png'\r\n\r\nconst Movies = () => {\r\n  const { movies, isLoading } = useGlobalContext()\r\n\r\n  if (isLoading) {\r\n    return <div className='loading'></div>\r\n  }\r\n  return (\r\n    <section className='movies'>\r\n      {movies.map((movie) => {\r\n        const { imdbID: id, Poster: poster, Title: title, Year: year } = movie\r\n\r\n        return (\r\n          <Link to={`/movies/${id}`} key={id} className='movie'>\r\n            <article>\r\n              <img src={poster === 'N/A' ? url : poster} alt={title} />\r\n              <div className='movie-info'>\r\n                <h4 className='title'>{title}</h4>\r\n                <p>{year}</p>\r\n              </div>\r\n            </article>\r\n          </Link>\r\n        )\r\n      })}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Movies\r\n","import React from 'react'\r\nimport Form from './SearchForm'\r\nimport Movies from './Movies'\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <Form />\r\n      <Movies />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { API_ENDPOINT } from './context'\r\nimport useFetch from './useFetch'\r\nconst SingleMovie = () => {\r\n  const { id } = useParams()\r\n  const { isLoading, error, data: movie } = useFetch(`&i=${id}`)\r\n\r\n  if (isLoading) {\r\n    return <div className='loading'></div>\r\n  }\r\n  if (error.show) {\r\n    return (\r\n      <div className='page-error'>\r\n        <h1>{error.msg}</h1>\r\n        <Link to='/' className='btn'>\r\n          back to movies\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n  const { Poster: poster, Title: title, Plot: plot, Year: year } = movie\r\n  return (\r\n    <section className='single-movie'>\r\n      <img src={poster} alt={title} />\r\n      <div className='single-movie-info'>\r\n        <h2>{title}</h2>\r\n        <p>{plot}</p>\r\n        <h4>{year}</h4>\r\n        <Link to='/' className='btn'>\r\n          back to movies\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SingleMovie\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from './Home'\r\nimport Movie from './SingleMovie'\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path='/' exact>\r\n        <Home />\r\n      </Route>\r\n      <Route path='/movies/:id' children={<Movie />} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { AppProvider } from './context'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}